:: StoryTitle
Actual story for my research 


:: StoryData
{
	"ifid": "D674C58C-DEFA-4F70-B7A2-27742230C0FC",
	"format": "SugarCube",
	"format-version": "2.30.0",
	"start": "Start",
	"tag-colors": {
		"bar": "green",
		"foo": "red",
		"qaz": "blue"
	},
	"zoom": 1
}

:: Start 
Go to character editor first.
	Let player choose character.
	Let that affect the next states in each of the other parts.

[[Character Editor]]

:: Character Editor {"position":"225,100","size":"100,100"}

name: <<textbox "$name" $name>>
<<for _name, _val range $roleValue>>
	<<set _index = _name>>
	<<capture _index>>
	_index <label><<checkbox "$roleValue[_index]" false true>></label>
<</capture>>
<</for>>
Get some text to change based on the identity you choose
<<set $description = $evaluateIdentities($roleValue, $identityDescription)>>

Your name is $name and you appear to be both <<print _pros>> and <<print _cons>>.

What would you like to do?
who would you like to talk to?
[[Role Editor]] 


:: Role Editor
<<script>>
console.log(state.variables.roleValue, "here are the variables");
state.variables.playerRoles = mia.testCaseToTryThis(state.variables.roleValue)
console.log(state.variables);
<</script>>
<<for _name, _val range $roleValue>>
	<<set _index = _name>>
	<<capture _index>>
	<<if _val>>
		_name
	<</if>>
<</capture>>
<</for>>
[[character output]]


:: character output
This page should be a 


[[dialogue experiment with the blacksmith | Blacksmith dialogue]]
[[physical experiment with the drill instructor | Drill instructor interaction]]
[[Internal experiment with the psychic | Psychic interaction]]

:: dialogue
:: Blacksmith dialogue
<<script>>
console.log("player actions", state.variables.playerAction);	
if (state.variables.playerAction !== undefined) {
	mia.setActionEffects(state.variables.playerAction);
	cif.setupNextTimeStep();
	state.variables.playerAction = undefined;
}

state.variables.dialogue = mia.getCharDialogue("blacksmith", "player");
state.variables.playerActions = mia.getPlayerCharacterInteractions("player", "blacksmith");
console.log(state.variables);
<</script>>

Ideal output : "So you do a little bit of smithing eh? Want to smith something?"
Story snippet : reject offer (DIALOGUE), accept offer (DIALOGUE)
Story snippet : If reject, then nothing. If accept, then (ACTION)
Output: Reject leads to "eh then why even mention you're a blacksmith?"
		Accept lead to a new weapon forged.	"Now ain't that a beauty?	"

Blacksmith : $dialogue
<<for _index, _val range $playerActions>>
	<<capture _index>>
	<<set _action = $playerActions[_index]>>
	_val.role <label><<radiobutton "$playerAction" _action>> _val.dialogue</label>
<</capture>>
<</for>>

<<button [[Keep talking to the blacksmith | Blacksmith dialogue]]>> <</button>>
[[Talk to the silversmith | Silversmith dialogue]]


:: Silversmith dialogue
<<script>>
state.variables.getCharDialogue("silversmith");
<</script>>

:: physical
<<script>>
state.variables.getCharPhsyicalAction("blacksmith");
<</script>>


:: Drill instructor interaction
THIS IS A TEST PAGE FOR THE PHYSICAL ACTION PROCESSING

:: Psychic interaction
THIS IS A TEST PAGE FOR THE INTERNAL ACTION PROCESSING